/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.Gson;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.List;
import java.util.Map;

public class App {
    public String getGreeting() {
        return "Hello world.";
    }

    public static void main(String[] args) throws IOException {

        System.out.println(new App().getGreeting());
        String apiUrl = "https://favqs.com/api/qotd";
        quotesAndAPI(apiUrl);
    }

    public static boolean quotesAndAPI(String apiUrl) throws FileNotFoundException {
        FileReader fileReader = new FileReader("src/main/java/recentquotes.json");
        Gson gson = new Gson();
        List<Map> list = gson.fromJson(fileReader, List.class);
        int min = 0;
        int max = list.size() - 1;
        int j = (int) (Math.random() * (max - min + 1) + min);

        Map randomItem = list.get(j);


        StringBuilder stringBuilder = new StringBuilder();

        try {
            URL url = new URL(apiUrl);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");
            connection.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.95 Safari/537.11");
            int status = connection.getResponseCode();

            if (status == 200) {
                InputStream inputStream = connection.getInputStream();
                InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
                BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
                String line = bufferedReader.readLine();
                while (line != null) {

                    stringBuilder.append(line + "\r\n");
                    line = bufferedReader.readLine();

                }
                FileOutputStream information = new FileOutputStream("src/main/java/addingFromAPI.json", true);
                information.write(stringBuilder.toString().getBytes());
                information.close();
                System.out.println(stringBuilder.toString());
            } else {
                System.out.println("An error occurred with status " + status);
            }
            connection.disconnect();
                return true;
        } catch (MalformedURLException e) {
            Quotes quotes = new Quotes(randomItem);
        } catch (IOException e) {
            Quotes quotes = new Quotes(randomItem);
        }
        return false;
    }
}

